%% 构造（压缩+乱序）数据
global DATA INIT PIC LABEL
tic;
fprintf('Data Construction(downsampling & corrpution)...')
nn = [0, DATA.num_eachgroup];
outliers_ID = zeros(1,INIT.num_groups*INIT.outliers_num_each);
index = 1;

for ii = 1:INIT.num_groups
    DATA.X_gt(:, sum(nn(1:ii))+1:sum(nn(1:ii+1))) = DownsamplePicture(DATA.YaleB_cell{1, INIT.start_person_id-1+ii},...
                                                                    PIC.ori_height, ...
                                                                    PIC.ori_width, ...
                                                                    PIC.height, ...
                                                                    PIC.width);
    
    outliers_id = randperm(DATA.num_eachgroup(ii), INIT.outliers_num_each);

    specific_ids = [46, 23, 54, 12];
    for j = 1:length(specific_ids)
        if length(setdiff(outliers_id, specific_ids(j))) == INIT.outliers_num_each
            outliers_id(j) = specific_ids(j);
        end
    end

    [X] = permute_face_randomly(DATA.X_gt(:, sum(nn(1:ii))+1:sum(nn(1:ii+1))),...
                                outliers_id,...
                                PIC.height, ...
                                PIC.width, ...
                                PIC.v_patches, ...
                                PIC.h_patches,...
                                INIT.missing_ratio,...
                                INIT.shuffled_ratio,...
                                INIT.seeds(end));
                                    
    DATA.X_tilde(:, sum(nn(1:ii))+1:sum(nn(1:ii+1))) = X;
    outliers_ID((index-1)*INIT.outliers_num_each+1:index*INIT.outliers_num_each) = sort(outliers_id)+sum(nn(1:ii));
    index = index+1;
end
inliers_ID = setdiff(1:N, outliers_ID);

LABEL.outliers_ID = outliers_ID;
LABEL.inliers_ID = inliers_ID;

fprintf('Over, costing %0.2fs\n', toc)
fprintf('\t-->Data Information:<--\n')
    fprintf(...
            ['\tnum_groups = '                  num2str(INIT.num_groups)                        ...
            '\n\tstart_person_id = '            num2str(INIT.start_person_id)                   ...
            '\n\tnumber of total samples = '    num2str(size(DATA.X_tilde,2))                   ...
            '\n\tdimension of each sample = '   num2str(size(DATA.X_tilde,1))                   ...
            '\n\tnumber of outliers = '         num2str(INIT.outliers_num_each*INIT.num_groups) ...
            '\n\tshuffled_ratio = '                num2str(INIT.shuffled_ratio) '\n\n'          ...
            ]                 ...
            )




